const contractAddress="0x4ae657565c5eb8897d421b145b5f36fde9d8ee3d",abiAddress="./contracts/abi.json";function ContractInterface(){function e(e,t,n){let r=new XMLHttpRequest;r.onreadystatechange=function(){r.readyState===XMLHttpRequest.DONE&&(200===r.status?t&&t(JSON.parse(r.responseText)):n&&n(r))},r.open("GET",e,!0),r.send()}function t(t,n,r){return new Promise(async(c,a)=>{r.eth.getAccounts((o,s)=>null!=o?a(o):0===s.length?(console.log("locked"),a("MetaMask is locked")):void e(abiAddress,async e=>{const o=await r.eth.contract(e).at(contractAddress);try{await o[t](...n,{from:r.eth.accounts[0],gas:3e6},(e,t)=>void 0!==t?c(t):e?a("Metamask reject the transaction"):void 0)}catch(e){return a(e)}},e=>a(e)))})}this.contract=((n,r)=>new Promise(async(c,a)=>{Web3.providers.HttpProvider.prototype.sendAsync=Web3.providers.HttpProvider.prototype.send;let o=new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));if(o.isConnected())(function(t,n,r){return new Promise((c,a)=>{try{e(abiAddress,async e=>{try{const o=await r.eth.contract(e).at(contractAddress),s=await o[t](...n,{from:r.eth.accounts[0],gas:3e6});if(s)return c(s)}catch(e){return a(e)}},e=>a(e))}catch(e){return a("Something went wrong with the connection"+e)}})})(n,r,o).then(e=>c(e),e=>a(e));else if(window.ethereum){let e=new Web3(ethereum);try{await ethereum.enable(),await t(n,r,e).then(e=>c(e),e=>a(e))}catch(e){return a("User denied account access")}}else if(window.web3){let e=new Web3(window.web3.currentProvider);t(n,r,e).then(e=>c(e),e=>a(e))}else{let t=new Web3(new Web3.providers.HttpProvider("https://nn54wgx9u0.execute-api.us-east-1.amazonaws.com/prod/mainnet"));if(!t.isConnected())return a("No Ethereum instance detected!");(function(t,n,r){return new Promise((c,a)=>{try{e(abiAddress,async e=>{try{const o=await r.eth.contract(e).at(contractAddress),s=await o[t](...n,{gas:3e6});if(s)return c(s)}catch(e){return a(e)}},e=>a(e))}catch(e){return a("Something went wrong with the connection"+e)}})})(n,r,t).then(e=>c(e),e=>a(e))}}))}